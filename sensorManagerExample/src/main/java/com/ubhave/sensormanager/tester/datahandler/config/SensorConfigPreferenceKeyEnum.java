package com.ubhave.sensormanager.tester.datahandler.config;

import com.ubhave.sensormanager.sensors.SensorUtils;
import com.ubhave.sensormanager.tester.datahandler.DeviceUtils;

public enum SensorConfigPreferenceKeyEnum
{
	ACCELEROMETER(SensorUtils.SENSOR_NAME_ACCELEROMETER, SensorUtils.SENSOR_TYPE_ACCELEROMETER, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_ACCELEROMETER),
	AMBIENT_TEMPERATURE(SensorUtils.SENSOR_NAME_AMBIENT_TEMPERATURE, SensorUtils.SENSOR_TYPE_AMBIENT_TEMPERATURE, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_AMBIENT_TEMPERATURE),
	BATTERY(SensorUtils.SENSOR_NAME_BATTERY, SensorUtils.SENSOR_TYPE_BATTERY, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_BATTERY),
	BLUETOOTH(SensorUtils.SENSOR_NAME_BLUETOOTH, SensorUtils.SENSOR_TYPE_BLUETOOTH, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_BLUETOOTH),
	CALL_CONTENT_READER(SensorUtils.SENSOR_NAME_CALL_CONTENT_READER, SensorUtils.SENSOR_TYPE_CALL_CONTENT_READER, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_CALL_CONTENT_READER),
	CONNECTION_STATE(SensorUtils.SENSOR_NAME_CONNECTION_STATE, SensorUtils.SENSOR_TYPE_CONNECTION_STATE, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_CONNECTION_STATE),
	CONNECTION_STRENGTH(SensorUtils.SENSOR_NAME_CONNECTION_STRENGTH, SensorUtils.SENSOR_TYPE_CONNECTION_STRENGTH, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_CONNECTION_STRENGTH),
	GYROSCOPE(SensorUtils.SENSOR_NAME_GYROSCOPE, SensorUtils.SENSOR_TYPE_GYROSCOPE, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_GYROSCOPE),
	HUMIDITY(SensorUtils.SENSOR_NAME_HUMIDITY, SensorUtils.SENSOR_TYPE_HUMIDITY, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_HUMIDITY),
	LIGHT(SensorUtils.SENSOR_NAME_LIGHT, SensorUtils.SENSOR_TYPE_LIGHT, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_LIGHT),
	LOCATION(SensorUtils.SENSOR_NAME_LOCATION, SensorUtils.SENSOR_TYPE_LOCATION, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_LOCATION),
	MAGNETIC_FIELD(SensorUtils.SENSOR_NAME_MAGNETIC_FIELD, SensorUtils.SENSOR_TYPE_MAGNETIC_FIELD, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_MAGNETIC_FIELD),
	MICROPHONE(SensorUtils.SENSOR_NAME_MICROPHONE, SensorUtils.SENSOR_TYPE_MICROPHONE, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_MICROPHONE),
	PASSIVE_LOCATION(SensorUtils.SENSOR_NAME_PASSIVE_LOCATION, SensorUtils.SENSOR_TYPE_PASSIVE_LOCATION, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_PASSIVE_LOCATION),
	PHONE_RADIO(SensorUtils.SENSOR_NAME_PHONE_RADIO, SensorUtils.SENSOR_TYPE_PHONE_RADIO, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_PHONE_RADIO),
	PHONE_STATE(SensorUtils.SENSOR_NAME_PHONE_STATE, SensorUtils.SENSOR_TYPE_PHONE_STATE, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_PHONE_STATE),
	PRESSURE(SensorUtils.SENSOR_NAME_PRESSURE, SensorUtils.SENSOR_TYPE_PRESSURE, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_PRESSURE),
	PROXIMITY(SensorUtils.SENSOR_NAME_PROXIMITY, SensorUtils.SENSOR_TYPE_PROXIMITY, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_PROXIMITY),
	SCREEN(SensorUtils.SENSOR_NAME_SCREEN, SensorUtils.SENSOR_TYPE_SCREEN, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_SCREEN),
	SMS(SensorUtils.SENSOR_NAME_SMS, SensorUtils.SENSOR_TYPE_SMS, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_SMS),
	SMS_CONTENT_READER(SensorUtils.SENSOR_NAME_SMS_CONTENT_READER, SensorUtils.SENSOR_TYPE_SMS_CONTENT_READER, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_SMS_CONTENT_READER),
	STEP_COUNTER(SensorUtils.SENSOR_NAME_STEP_COUNTER, SensorUtils.SENSOR_TYPE_STEP_COUNTER, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_STEP_COUNTER),
	USER_INTERACTION(SensorUtils.SENSOR_NAME_INTERACTION, SensorUtils.SENSOR_TYPE_INTERACTION, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_INTERACTION),
	WIFI(SensorUtils.SENSOR_NAME_WIFI, SensorUtils.SENSOR_TYPE_WIFI, DeviceUtils.SENSOR_START_SAMPLING_ON_BOOT_WIFI);

	private final String name;
	private final int type;
	private final String starSamplingOnBootPreferenceKey;

	private SensorConfigPreferenceKeyEnum(String name, int type, String starSamplingOnBootPreferenceKey)
	{
		this.name = name;
		this.type = type;
		this.starSamplingOnBootPreferenceKey = starSamplingOnBootPreferenceKey;
	}

	public String getName()
	{
		return name;
	}

	public int getType()
	{
		return type;
	}

	public String getStarSamplingOnBootPreferenceKey()
	{
		return starSamplingOnBootPreferenceKey;
	}
}
